{"config":{"lang":["pt"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Bem-vindo \u00e0 Documenta\u00e7\u00e3o do C\u00f3digo-QL","text":"<p>Ol\u00e1, professor(a) e colaborador(a)!</p> <p>Esta documenta\u00e7\u00e3o \u00e9 o guia central para entender a estrutura da plataforma C\u00f3digo-QL e como voc\u00ea pode contribuir com novos cap\u00edtulos e n\u00edveis de exerc\u00edcios.</p> <p>O C\u00f3digo-QL foi desenvolvido como um Trabalho de Conclus\u00e3o de Curso (TCC) em Engenharia de Software na Universidade de Bras\u00edlia (UnB) por Natan Tavares Santana, com o objetivo de criar uma abordagem pr\u00e1tica e l\u00fadica para o ensino de consultas SQL.</p>"},{"location":"#primeiros-passos","title":"Primeiros Passos","text":"<ul> <li>Como Contribuir: Se voc\u00ea deseja adicionar novos exerc\u00edcios, comece por aqui.</li> <li>Licen\u00e7a: Entenda os termos de uso e distribui\u00e7\u00e3o do projeto.</li> </ul>"},{"location":"contributing/","title":"Pol\u00edticas de Contribui\u00e7\u00e3o do C\u00f3digo-QL","text":"<p>Agradecemos seu interesse em contribuir com o C\u00f3digo-QL! Este projeto cresce com a ajuda da comunidade. Para manter tudo organizado, criamos este guia.</p>"},{"location":"contributing/#como-voce-quer-contribuir","title":"Como Voc\u00ea Quer Contribuir?","text":"<p>Existem duas formas principais de ajudar o projeto. Escolha o caminho que mais se encaixa com seu objetivo:</p>"},{"location":"contributing/#1-contribuindo-com-conteudo-capitulos-e-niveis","title":"1. Contribuindo com Conte\u00fado (Cap\u00edtulos e N\u00edveis)","text":"<p>Se voc\u00ea \u00e9 um professor ou especialista em SQL e deseja adicionar novos exerc\u00edcios, narrativas e desafios para os alunos, este \u00e9 o seu caminho. O foco aqui \u00e9 puramente no material did\u00e1tico.</p> <p>Para come\u00e7ar, consulte nosso tutorial detalhado:</p> <ul> <li>\u27a1\ufe0f Tutorial: Como Criar Novos Cap\u00edtulos</li> </ul> <p>Importante: Mesmo contribuindo apenas com conte\u00fado, pedimos que voc\u00ea siga nosso Fluxo de Trabalho Padr\u00e3o (descrito abaixo) para criar branches e Pull Requests. Para o tipo de branch e commit, voc\u00ea pode usar <code>feat</code>, pois um novo cap\u00edtulo \u00e9 uma nova \"feature\" para os alunos.</p>"},{"location":"contributing/#2-contribuindo-com-codigo-funcionalidades-e-correcoes","title":"2. Contribuindo com C\u00f3digo (Funcionalidades e Corre\u00e7\u00f5es)","text":"<p>Se voc\u00ea \u00e9 um desenvolvedor e quer ajudar a melhorar a plataforma, corrigir bugs, refatorar o c\u00f3digo ou adicionar novas funcionalidades (como um novo tipo de feedback para o aluno, por exemplo), este \u00e9 o seu caminho.</p> <p>Para come\u00e7ar, procure uma Issue aberta no nosso reposit\u00f3rio e siga o Fluxo de Trabalho Padr\u00e3o descrito a seguir.</p>"},{"location":"contributing/#fluxo-de-trabalho-padrao-para-todos-os-colaboradores","title":"Fluxo de Trabalho Padr\u00e3o (Para Todos os Colaboradores)","text":"<p>Independente do tipo de contribui\u00e7\u00e3o, pedimos que siga o fluxo abaixo para manter o projeto organizado e rastre\u00e1vel.</p>"},{"location":"contributing/#issues","title":"Issues","text":"<p>Toda contribui\u00e7\u00e3o deve come\u00e7ar com uma Issue.</p> <ul> <li>T\u00edtulo: <code>C\u00d3DIGO - breve t\u00edtulo</code></li> </ul> Tipo Prefixo Exemplo no t\u00edtulo da issue User Story USX US4 - Exibir progresso do usu\u00e1rio Bug BUGX BUG2 - Corrigir erro de login Documenta\u00e7\u00e3o DOCX DOC1 - Atualizar guia do usu\u00e1rio Tarefa TASKX TASK2 - Atualizar depend\u00eancias do projeto Teste TESTX TEST3 - Cobertura de testes no cadastro Melhoria IMPX IMP1 - Melhorar responsividade <ul> <li>Descri\u00e7\u00e3o:   A descri\u00e7\u00e3o deve ser clara e detalhada. Inclua contexto, crit\u00e9rios de aceite, passos para reprodu\u00e7\u00e3o (em bugs) etc.</li> </ul>"},{"location":"contributing/#branches","title":"Branches","text":"<ul> <li>Padr\u00e3o de nome: <code>tipo/C\u00d3DIGO</code></li> </ul> Tipo Descri\u00e7\u00e3o Exemplo <code>feat</code> Nova funcionalidade, cap\u00edtulo ou n\u00edvel <code>feat/US3</code> <code>bug</code> Corre\u00e7\u00e3o de bug <code>bug/BUG2</code> <code>doc</code> Mudan\u00e7as na documenta\u00e7\u00e3o <code>doc/DOC1</code> <code>build</code> Mudan\u00e7as em build, CI/CD, depend\u00eancias <code>build/TASK2</code> <code>chore</code> Tarefas rotineiras, refatora\u00e7\u00f5es <code>chore/TASK2</code> <code>test</code> Inclus\u00e3o ou ajuste de testes <code>test/TEST3</code> <code>style</code> Ajustes de formata\u00e7\u00e3o/estilo <code>style/IMP1</code> <ul> <li> <p>Fluxo de Trabalho:</p> <ol> <li>Sempre crie sua branch a partir da <code>main</code>.</li> <li>Garanta que sua <code>main</code> local est\u00e1 atualizada: <code>git pull origin main</code>.</li> <li>Crie a nova branch: <code>git checkout -b tipo/CODIGO</code>.</li> </ol> </li> </ul>"},{"location":"contributing/#pull-requests-prs","title":"Pull Requests (PRs)","text":"<ul> <li> <p>T\u00edtulo:   Deve ser igual ao t\u00edtulo da issue relacionada.</p> </li> <li> <p>Descri\u00e7\u00e3o:</p> <ul> <li>Relacione a Issue: Use <code>Closes #42</code> para que o GitHub feche a issue automaticamente.</li> <li>Checklist antes de submeter:<ul> <li>[ ] Minha branch est\u00e1 atualizada com a <code>main</code>.</li> <li>[ ] A altera\u00e7\u00e3o resolve completamente a issue mencionada.</li> <li>[ ] O t\u00edtulo e os commits seguem os padr\u00f5es definidos.</li> </ul> </li> </ul> </li> </ul>"},{"location":"contributing/#commits","title":"Commits","text":"<ul> <li> <p>Padr\u00e3o de mensagem:</p> <p><code>tipo: mensagem do commit</code></p> <p>Exemplos:</p> <ul> <li><code>feat: adiciona cap\u00edtulo sobre fun\u00e7\u00f5es de janela</code></li> <li><code>bug: corrige valida\u00e7\u00e3o da resposta do n\u00edvel 3</code></li> <li><code>doc: melhora o tutorial de cria\u00e7\u00e3o de cap\u00edtulos</code></li> </ul> </li> </ul>"},{"location":"license/","title":"Licen\u00e7a","text":"<p>O projeto C\u00f3digo-QL \u00e9 licenciado sob a GNU Affero General Public License v3.0 (AGPLv3).</p> <p>Isso significa que voc\u00ea tem a liberdade de usar, estudar, compartilhar e modificar o software. No entanto, qualquer trabalho derivado que voc\u00ea distribuir ou disponibilizar como um servi\u00e7o de rede tamb\u00e9m deve ser distribu\u00eddo sob os mesmos termos.</p> <p>Voc\u00ea pode ler o texto completo da licen\u00e7a no arquivo LICENSE na raiz do reposit\u00f3rio.</p>"},{"location":"tutorial/","title":"Tutorial Completo: Adicionando Conte\u00fado ao C\u00f3digo-QL","text":"<p>Este guia \u00e9 o seu ponto de partida para criar e adicionar novos cap\u00edtulos e n\u00edveis \u00e0 plataforma. O processo foi desenhado para ser simples, focando na edi\u00e7\u00e3o de arquivos de texto e na adi\u00e7\u00e3o de m\u00eddias.</p>"},{"location":"tutorial/#visao-geral-do-processo","title":"Vis\u00e3o Geral do Processo","text":"<p>Importante: Todas as contribui\u00e7\u00f5es de conte\u00fado, incluindo a edi\u00e7\u00e3o dos arquivos <code>.json</code> e a adi\u00e7\u00e3o de novos arquivos de imagem (<code>.webp</code>) e banco de dados (<code>.sqlite</code>), devem ser feitas exclusivamente no reposit\u00f3rio de banco de dados do projeto.</p> <p>Reposit\u00f3rio de Conte\u00fado: Codigo-QL/CodigoQL-DataBase</p> <p>Siga as instru\u00e7\u00f5es de configura\u00e7\u00e3o (<code>README.md</code>) desse reposit\u00f3rio para preparar seu ambiente local antes de come\u00e7ar.</p> <p>Adicionar conte\u00fado ao C\u00f3digo-QL envolve principalmente a edi\u00e7\u00e3o de quatro arquivos <code>.json</code> na pasta <code>data/</code>:</p> <ol> <li><code>capitulos.json</code>: Para definir a hist\u00f3ria principal do seu cap\u00edtulo.  </li> <li><code>personagens.json</code>: Para registrar os personagens que guiam a narrativa.  </li> <li><code>base_dados.json</code>: Para registrar os bancos de dados que seus exerc\u00edcios usar\u00e3o.  </li> <li><code>niveis.json</code>: Onde a m\u00e1gica acontece, definindo cada exerc\u00edcio.</li> </ol> <p>Voc\u00ea tamb\u00e9m poder\u00e1 adicionar arquivos nas pastas <code>data/images/</code> (imagens dos personagens) e <code>data/files/</code> (os bancos de dados .sqlite).</p>"},{"location":"tutorial/#passo-1-criando-um-novo-capitulo","title":"Passo 1: Criando um Novo Cap\u00edtulo","text":"<p>Tudo come\u00e7a com uma boa hist\u00f3ria. O cap\u00edtulo \u00e9 o cont\u00eainer da sua narrativa e agrupa uma sequ\u00eancia de n\u00edveis.</p> <p>Para criar um cap\u00edtulo, abra o arquivo <code>data/capitulos.json</code> e adicione um novo objeto JSON ao array.</p>"},{"location":"tutorial/#estrutura-do-objeto-capitulo","title":"Estrutura do Objeto Cap\u00edtulo","text":"<pre><code>// data/capitulos.json  \n[  \n  ...  \n  {  \n    \"codigo\": \"C3\",  \n    \"titulo\": \"O Mist\u00e9rio do Cais\",  \n    \"descricao\": \"Uma s\u00e9rie de desaparecimentos no cais da cidade levanta suspeitas de um novo serial killer...\\\\n\\\\n**Conte\u00fados abordados neste cap\u00edtulo:**\\\\n\\\\n- Consultas com **SUBSELECT**\\\\n- Fun\u00e7\u00f5es de data e hora\\\\n- **CASE WHEN**\"  \n  }  \n]\n</code></pre>"},{"location":"tutorial/#explicacao-dos-campos","title":"Explica\u00e7\u00e3o dos Campos","text":"<ul> <li>\"codigo\": (Obrigat\u00f3rio) Um c\u00f3digo \u00fanico e curto para identificar seu cap\u00edtulo. Use o padr\u00e3o CX, onde X \u00e9 o pr\u00f3ximo n\u00famero dispon\u00edvel.  </li> <li>\"titulo\": (Obrigat\u00f3rio) O nome do seu cap\u00edtulo, que ser\u00e1 exibido aos alunos.  </li> <li>\"descricao\": (Obrigat\u00f3rio) A sinopse da hist\u00f3ria. Este campo \u00e9 uma string que aceita formata\u00e7\u00e3o Markdown.  </li> <li>Use \\\\n para criar quebras de linha.  </li> <li>\u00c9 de extrema import\u00e2ncia que voc\u00ea use Markdown para listar os conceitos de SQL que ser\u00e3o ensinados, como no exemplo (**Conte\u00fados abordados...**).</li> </ul>"},{"location":"tutorial/#passo-2-construindo-os-niveis","title":"Passo 2: Construindo os N\u00edveis","text":"<p>Os n\u00edveis s\u00e3o os exerc\u00edcios pr\u00e1ticos que comp\u00f5em seu cap\u00edtulo. Antes de cri\u00e1-los, voc\u00ea precisa definir dois elementos essenciais: o personagem que guiar\u00e1 o aluno e o banco de dados que ele ir\u00e1 consultar.</p>"},{"location":"tutorial/#21-o-personagem-que-conduz-o-nivel","title":"2.1 - O Personagem que Conduz o N\u00edvel","text":"<p>Cada n\u00edvel \u00e9 conduzido por um personagem, que apresenta a narrativa, d\u00e1 dicas e fornece feedback.</p>"},{"location":"tutorial/#usando-um-personagem-existente","title":"Usando um Personagem Existente","text":"<p>Voc\u00ea pode usar qualquer personagem j\u00e1 definido no arquivo <code>data/personagens.json</code>. Basta usar o valor exato do campo <code>\"nome\"</code> ao criar seu n\u00edvel.</p>"},{"location":"tutorial/#criando-um-novo-personagem","title":"Criando um Novo Personagem","text":"<p>Se sua hist\u00f3ria precisa de algu\u00e9m novo:</p> <ol> <li>Prepare a Imagem: </li> <li>Crie uma imagem para o personagem no formato .webp para garantir que ela seja leve.  </li> <li>Importante: O fundo da imagem deve ser branco puro (#FFFFFF) para se mesclar perfeitamente com a interface da plataforma.  </li> <li>Adicione o arquivo de imagem \u00e0 pasta data/images/.  </li> <li>Registre o Personagem: </li> <li>Abra o arquivo data/personagens.json e adicione um novo objeto.</li> </ol> <pre><code>// data/personagens.json  \n[  \n  ...  \n  {  \n    \"nome\": \"Detetive Kaito\",  \n    \"imagem\": \"kaito.webp\"  \n  }  \n]\n</code></pre>"},{"location":"tutorial/#22-o-banco-de-dados-do-nivel-sqlite","title":"2.2 - O Banco de Dados do N\u00edvel (.sqlite)","text":"<p>Os alunos far\u00e3o as consultas em um banco de dados SQLite que voc\u00ea fornecer\u00e1.</p> <ul> <li>Recomenda\u00e7\u00e3o: V\u00e1rios n\u00edveis devem usar o mesmo arquivo de banco de dados. Isso cria uma sequ\u00eancia narrativa coesa, onde o aluno explora diferentes facetas do mesmo \"universo de dados\" para resolver um caso.</li> </ul>"},{"location":"tutorial/#usando-um-banco-de-dados-existente","title":"Usando um Banco de Dados Existente","text":"<p>Voc\u00ea pode usar qualquer banco j\u00e1 registrado em <code>data/base_dados.json</code>. Anote o \"codigo\" dele para usar na cria\u00e7\u00e3o do n\u00edvel.</p>"},{"location":"tutorial/#criando-um-novo-banco-de-dados","title":"Criando um Novo Banco de Dados","text":"<p>Se seu cap\u00edtulo precisa de um conjunto de tabelas totalmente novo:</p> <p>Siga o tutorial abaixo para criar o arquivo <code>.sqlite</code>:</p> <p>Voc\u00ea pode usar qualquer ferramenta que gere um arquivo <code>.sqlite</code>. O m\u00e9todo recomendado, por ser baseado em texto e facilmente version\u00e1vel, \u00e9 usar a ferramenta de linha de comando <code>sqlite3</code>.</p> <p>Pr\u00e9-requisito: Voc\u00ea precisa ter o SQLite instalado em sua m\u00e1quina para ter o comando sqlite3 dispon\u00edvel no terminal.</p> <ul> <li>Crie um arquivo <code>.sql</code>:</li> </ul> <p>Crie um arquivo de texto simples (ex: <code>C3S1.sql</code>) onde voc\u00ea escrever\u00e1 os comandos para criar as tabelas e inserir os dados.</p> <pre><code>-- Exemplo de conte\u00fado para C3S1.sql\n\nCREATE TABLE barcos (\nid INTEGER PRIMARY KEY,\nnome TEXT NOT NULL,\ntipo TEXT,\nhora_chegada TEXT\n);\n\nINSERT INTO barcos (id, nome, tipo, hora_chegada) VALUES\n(1, 'Estrela do Mar', 'Pesca', '18:30'),\n(2, 'Vento Norte', 'Carga', '22:15'),\n(3, 'Gaivota', 'Turismo', '23:00');\n</code></pre> <ul> <li>Gere e Teste o Banco de Dados:</li> </ul> <p>Abra um terminal e use o sqlite3 para executar seu script. \u00c9 uma boa pr\u00e1tica gerar primeiro um arquivo .db para testes.</p> <pre><code># Este comando cria 'teste.db' e executa os comandos de 'C3S1.sql' dentro dele\nsqlite3 teste.db &lt; C3S1.sql\n</code></pre> <p>Agora, voc\u00ea pode abrir o banco de dados para testar se tudo foi criado corretamente:</p> <pre><code># Abrir o console do sqlite3\nsqlite3 teste.db\n</code></pre> <p>Dentro do console, voc\u00ea pode rodar comandos para verificar:</p> <pre><code>sqlite&gt; .tables          -- Lista as tabelas criadas\nsqlite&gt; SELECT * FROM barcos; -- Verifica se os dados foram inseridos\nsqlite&gt; .exit            -- Sai do console\n</code></pre> <ul> <li>Renomeie para a Vers\u00e3o Final:</li> </ul> <p>Se os testes foram bem-sucedidos, renomeie o arquivo <code>.db</code> para <code>.sqlite</code> com o nome padr\u00e3o e coloque-o na pasta <code>data/files/</code>.</p> <pre><code># Renomeia o arquivo de teste para o nome final\nmv teste.db C3S1.sqlite\n</code></pre> <p>Registre o Novo Banco de Dados:</p> <ul> <li>Abra o arquivo <code>data/base_dados.json</code> e adicione um novo objeto.</li> </ul> <p>Estrutura e Padr\u00e3o do C\u00f3digoO campo \"codigo\" \u00e9 crucial para a organiza\u00e7\u00e3o e segue um padr\u00e3o estrito: CXSY.</p> <ul> <li> </li> <li> <p>SY: Refere-se \u00e0 Sequ\u00eancia dentro daquele cap\u00edtulo. Uma \"Sequ\u00eancia\" \u00e9 um conjunto de n\u00edveis que compartilham o mesmo arquivo de banco de dados e d\u00e3o continuidade a uma micro-hist\u00f3ria. Por exemplo, S1 para a primeira sequ\u00eancia. Portanto, C3S1 significa \"Cap\u00edtulo 3, Sequ\u00eancia 1\".</p> </li> </ul> <pre><code>// data/base_dados.json  \n[  \n  ...  \n  {  \n    \"codigo\": \"C3S1\",  \n    \"nome\": \"Banco de Dados do Caso do Cais - Parte 1\",  \n    \"arquivo\": \"C3S1.sqlite\"  \n  }  \n]\n</code></pre>"},{"location":"tutorial/#cx-refere-se-ao-capitulo-por-exemplo-c3-para-o-capitulo-3","title":"CX: Refere-se ao Cap\u00edtulo. Por exemplo, C3 para o Cap\u00edtulo 3.","text":""},{"location":"tutorial/#23-adicionando-o-nivel-ao-niveisjson","title":"2.3 - Adicionando o N\u00edvel ao niveis.json","text":"<p>Com o cap\u00edtulo, personagem e banco de dados definidos, voc\u00ea est\u00e1 pronto para criar o n\u00edvel. Abra <code>data/niveis.json</code> e adicione um novo objeto para cada exerc\u00edcio.</p>"},{"location":"tutorial/#estrutura-do-objeto-nivel","title":"Estrutura do Objeto N\u00edvel","text":"<pre><code>{  \n  \"id\": 25,  \n  \"codigo_cap\": \"C3\",  \n  \"narrativa\": \"A primeira pista surge de um bilhete an\u00f4nimo...\\\\n\\\\\\n O texto do bilhete dizia: 'Procurem o barco que chegou por \u00faltimo'.\",  \n  \"enunciado\": \"Recupere o nome de todos os barcos atracados no cais ap\u00f3s as 22h.\",  \n  \"dica\": \"Para filtrar por hora, voc\u00ea precisar\u00e1 de uma fun\u00e7\u00e3o de data. Lembre-se de como usar a cl\u00e1usula **WHERE**.\\\\n\\\\nPara ver a estrutura da tabela, use o comando:\\\\n\\\\n```sql\\nPRAGMA table_info(barcos);\\\\n```\",  \n  \"personagem_nome\": \"Detetive Kaito\",  \n  \"solucao\": \"SELECT nome FROM barcos WHERE hora_chegada &gt; '22:00';\",  \n  \"feedback_correto\": \"\u00d3timo trabalho! A lista revela um padr\u00e3o suspeito. Parece que todos os barcos pertencem \u00e0 mesma empresa.\",  \n  \"feedback_errado\": \"Ainda n\u00e3o \u00e9 isso. A testemunha foi clara sobre o hor\u00e1rio. Tente revisar a condi\u00e7\u00e3o do seu filtro de tempo.\",  \n  \"codigo_base\": \"C3S1\"  \n}\n</code></pre>"},{"location":"tutorial/#explicacao-dos-campos-do-nivel","title":"Explica\u00e7\u00e3o dos Campos do N\u00edvel","text":"<ul> <li>\"id\": (Obrigat\u00f3rio) Um n\u00famero de identifica\u00e7\u00e3o \u00fanico para o n\u00edvel. Verifique o id do \u00faltimo n\u00edvel no arquivo e adicione 1.  </li> <li>\"codigo_cap\": (Obrigat\u00f3rio) O \"codigo\" do cap\u00edtulo ao qual este n\u00edvel pertence.  </li> <li>\"narrativa\": (Obrigat\u00f3rio) O texto da hist\u00f3ria que contextualiza o exerc\u00edcio. Aceita formata\u00e7\u00e3o Markdown e \\\\n para quebras de linha.  </li> <li>\"enunciado\": (Obrigat\u00f3rio) A instru\u00e7\u00e3o direta e objetiva do que o aluno precisa fazer com a consulta SQL.  </li> <li>\"dica\": (Obrigat\u00f3rio) Ajuda contextual fornecida pelo personagem. Aceita formata\u00e7\u00e3o Markdown, n\u00e3o utilize `` para destacar termos t\u00e9cnicos, use ** no lugar. \u00c9 obrigat\u00f3rio incluir o comando <code>PRAGMA table_info(nome_da_tabela);</code> dentro de um bloco de c\u00f3digo (usando ```sql ... ```) para cada tabela necess\u00e1ria para a solu\u00e7\u00e3o.  </li> <li>\"personagem_nome\": (Obrigat\u00f3rio) O nome exato do personagem (definido em personagens.json) que est\u00e1 conduzindo este n\u00edvel.  </li> <li>\"solucao\": (Obrigat\u00f3rio) A string contendo a consulta SQL correta que resolve o exerc\u00edcio.  </li> <li>\"feedback_correto\": (Obrigat\u00f3rio) A mensagem que o personagem dir\u00e1 ao aluno quando ele acertar. Deve ter rela\u00e7\u00e3o com a narrativa.  </li> <li>\"feedback_errado\": (Obrigat\u00f3rio) A mensagem que o personagem dir\u00e1 quando o aluno errar.  </li> <li>\"codigo_base\": (Obrigat\u00f3rio) O \"codigo\" do banco de dados (definido em base_dados.json) que este n\u00edvel utilizar\u00e1.</li> </ul>"},{"location":"tutorial/#passo-3-teste-e-submeta-sua-contribuicao","title":"Passo 3: Teste e Submeta sua Contribui\u00e7\u00e3o","text":"<p>Depois de adicionar todas as suas altera\u00e7\u00f5es nos arquivos json e incluir os novos arquivos <code>.webp</code> e <code>.sqlite</code> (se houver):</p> <ol> <li>Teste Localmente: Abra um terminal na raiz do projeto codigoql-database e rode o comando <code>npm run prisma-seed</code>. Isso ir\u00e1 ler seus arquivos e tentar adicionar os dados ao banco. Fique atento a qualquer mensagem de erro.  </li> <li>Envie: Se tudo funcionar, siga as Pol\u00edticas de Contribui\u00e7\u00e3o para criar uma branch, fazer o commit das suas altera\u00e7\u00f5es e abrir um Pull Request.</li> </ol> <p>Sua contribui\u00e7\u00e3o ser\u00e1 revisada e, se aprovada, far\u00e1 parte do universo do C\u00f3digo-QL!</p>"}]}